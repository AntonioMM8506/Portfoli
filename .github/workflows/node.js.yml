name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
  CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
  CONTENTFUL_PREVIEW_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_PREVIEW_ACCESS_TOKEN }}
  EMAIL_USER: ${{ secrets.EMAIL_USER }}
  EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
  EMAIL_PORTFOLIO: ${{ secrets.EMAIL_PORTFOLIO }}

jobs:
  build:

    #OS
    runs-on: ubuntu-latest

    #Node version used
    strategy:
      matrix:
        node-version: [12.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    #For using Node.js
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    #For caching the dependencies, so the pipeline doesn't take 
    #too long. Only when a  new dependency is added, all the 
    #packages are installed once again.
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: |
          **/node_modules
        key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

    - name: Install dependencies
      run: npm install

    - name: Build
      run: npm run build

    #For deploying the application. A token with a certain life time is added.
    #The username and the email does not have to be necessary the real ones
    - name: Deploy
      run: |
        git config --global user.name $user_name
        git config --global user.email $user_email
        git remote set-url origin https://${github_token}@github.com/${repository}
        npm run deploy
      env:
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
        github_token: ${{ secrets.ACTIONS_DEPLOY_ACCESS_TOKEN }}
        repository: ${{ github.repository }}
      
