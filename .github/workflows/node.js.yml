name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # At 13:00 on every 5th day-of-month from 1 through 31.
  # At 01:00 on every 5th day of month from 1 through 31.
  schedule:
    - cron: "0 1 1/2 * *"

env:
  CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
  CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
  CONTENTFUL_PREVIEW_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_PREVIEW_ACCESS_TOKEN }}
  EMAIL_USER: ${{ secrets.EMAIL_USER }}
  EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
  EMAIL_PORTFOLIO: ${{ secrets.EMAIL_PORTFOLIO }}
  BASE_URL: ${{ secrets.BASE_URL }}
  NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }} 

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:

    #OS
    runs-on: ubuntu-latest

    #Node version used
    strategy:
      matrix:
        node-version: [16.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    #For using Node.js
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Setup Pages
      id: pages
      uses: actions/configure-pages@v1
      with:
        static_site_generator: next
    #For caching the dependencies, so the pipeline doesn't take 
    #too long. Only when a  new dependency is added, all the 
    #packages are installed once again.
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          **/node_modules
        key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

    - name: Install dependencies
      run: npm install

    - name: Build
      run: npm run build

    #For deploying the application. A token with a certain life time is added.
    #The username and the email does not have to be necessary the real ones
    - name: Deploy
      run: |
        git config --global user.name $user_name
        git config --global user.email $user_email
        git remote set-url origin https://${github_token}@github.com/${repository}
        npm run export
      env:
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
        github_token: ${{ secrets.ACTIONS_DEPLOY_ACCESS_TOKEN }}
        repository: ${{ github.repository }}
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v1
      with:
        path: ./out

    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }} --confirm
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

  #deploy:
    #environment:
      #name: github-pages
      #url: ${{ steps.deployment.outputs.page_url }}
    #runs-on: ubuntu-latest

    #needs: build
    #steps:
        #- name: Deploy to Vercel
          #uses: amondnet/vercel-action@v20
          #with:
            #vercel-token: ${{ secrets.VERCEL_TOKEN }}      #- name: Deploy to GitHub Pages
        #id: deployment
        #uses: actions/deploy-pages@v1
